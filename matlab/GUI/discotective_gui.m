function discotective_gui

close all;
addpath classify output preprocess samples segment trim utility other;
% screen_size = get(0, 'ScreenSize');
monitors = get(0, 'MonitorPositions');
if size(monitors,1) > 1
    screen_size = monitors(2,:);
    figure_h = round(screen_size(4)*.9);
    figure_w = round(screen_size(3)*.7);
else
    screen_size = monitors(1,:);
    figure_h = round(screen_size(4)*.9);
    figure_w = round(screen_size(3)*.9);
end
[ding ding_fs] = wavread('micro');

% end_of_plot = 10 + round(figure_w*.6);
end_of_plot = 10 + round(figure_w*.7);
top_of_plot = round(figure_h*.025) + round(figure_h*.95);
center_right = round((figure_w+end_of_plot)/2);


% initialize
img = [];
plot_img = [];
song = [];
fs = 0;
pp_img = [];
bin_img = [];
staff_imgs = [];
num_st = 0;
complete = 0;
staffplots = cell(1,4);
original_height = 0;
BPM = 125;
notes = [];
key = 0;
key_lookup = {'C','Db','D','Eb','E','F','Gb/F#','G','Ab','A','Bb','B'};
keyS = 0; %key sig returned from discotective
legendfig = [];
image_name = '';


% figure
h_fig = figure(...
'PaperPosition',get(0,'defaultfigurePaperPosition'),...
'Position',[10 monitors(1,4)-figure_h-500 figure_w figure_h],... %adjust fit to screen
'Resize','off',...
'Tag','figure1',...
'CreateFcn',@figureCreateFcn);

figure_color = get(h_fig,'Color');

% toolbar
% h_toolbar = uitoolbar('Parent',h_fig);
% load toolbar_export.mat;
% h_zoomin = uitoggletool(...
%     'Parent',h_toolbar,...
%     'ClickedCallback','%default',...
%     'CData',mat{1},...
%     'TooltipString','Zoom In');
% h_zoomout = uitoggletool(...
%     'Parent',h_toolbar,...
%     'ClickedCallback','%default',...
%     'CData',mat{2},...
%     'TooltipString','Zoom Out');
% h_pan = uitoggletool(...
%     'Parent',h_toolbar,...
%     'ClickedCallback','%default',...
%     'CData',mat{3},...
%     'TooltipString','Pan');


% image plot
h_axes = axes(...
'Parent',h_fig,...
'Units','pixels',...
'Position',[10 round(figure_h*.025) round(figure_w*.7) round(figure_h*.95)],...
'LooseInset',[39 9 29 6],...
'XColor',get(0,'defaultaxesXColor'),...
'XTick',[],...
'XTickMode','manual',...
'YColor',get(0,'defaultaxesYColor'),...
'YTick',[],...
'YTickMode','manual',...
'Tag','image_plot');

% logo
h_logo = axes(...
'Parent',h_fig,...
'Units','pixels',...
'Position',[(center_right-35) 30 70 70],...
'XColor',get(0,'defaultaxesXColor'),...
'XTick',[],...
'XTickMode','manual',...
'YColor',get(0,'defaultaxesYColor'),...
'YTick',[],...
'YTickMode','manual');

logo = imread('logo.jpg');
image(logo,'Parent',h_logo); axis(h_logo,'off');

% copywrite text
h_textcopy = uicontrol(...
'Parent',h_fig,...
'Units','pixels',...
'FontSize',10,...
'Position',[(center_right-65) 20 130 20],...
'String','© The MezzoWizards',...
'Style','text',...
'BackgroundColor',figure_color);

% THE DISCOTECTIVE
h_title = uicontrol(...
'Parent',h_fig,...
'Units','pixels',...
'FontSize',30,...
'Position',[(center_right-145) top_of_plot-50 290 60],...
'String','The Discotective',...
'Style','text',...
'Tag','title',...
'BackgroundColor',figure_color);

% choose image: (text)
h_text1 = uicontrol(...
'Parent',h_fig,...
'Units','pixels',...
'FontSize',10,...
'Position',[(center_right-145) top_of_plot-130 100 20],...
'String','Choose Image:',...
'Style','text',...
'Tag','text1',...
'BackgroundColor',figure_color);

% complete! (text)
h_text2 = uicontrol(...
'Parent',h_fig,...
'Units','pixels',...
'FontSize',10,...
'Position',[(center_right-25) top_of_plot-260 70 40],...
'String','Complete!',...
'Visible','off',...
'FontWeight','bold',...
'Style','text',...
'ForegroundColor','b',...
'BackgroundColor',figure_color);

% popup menu
h_imagemenu = uicontrol(...
'Parent',h_fig,...
'Units','pixels',...
'BackgroundColor',[1 1 1],...
'Callback',@imageMenuCallback,...
'Position',[(center_right-140) (top_of_plot-150) 200 20],...
'String',{  blanks(0); 'accident'; 'bells'; 'chester'; 'dmaj'; 'fjords'; 'fmaj'; 'gentlemen'; 'gmaj'; 'grandma'; 'kings'; 'kookabara'; 'may'; 'moon'; 'mountain'; 'potter'; 'pokemon'; 'santa'; 'scarb'; 'still'; 'victors'; 'volga'; 'wenceslas'; 'wishmas' },...
'Style','popupmenu',...
'Value',1);

% display plot: (text)
h_text1 = uicontrol(...
'Parent',h_fig,...
'Units','pixels',...
'FontSize',10,...
'Position',[(center_right-146) top_of_plot-480 90 20],...
'String','Display Plot:',...
'Style','text',...
'Tag','text4',...
'BackgroundColor',figure_color);

% popup menu2 - choose which plot to display
h_plotmenu = uicontrol(...
'Parent',h_fig,...
'Units','pixels',...
'BackgroundColor',[1 1 1],...
'Callback',@plotMenuCallback,...
'Position',[(center_right-140) (top_of_plot-500) 200 20],...
'String',{'original'; 'binary'; 'straightened'; 'staffs cropped';'lines removed'; 'stem detection'; 'other symbol detection'},...
'Style','popupmenu',...
'Enable','off',...
'Value',1);

% run button
h_run = uicontrol(...
'Parent',h_fig,...
'Units','pixels',...
'Callback',@runButtonCallback,...
'CData',[],...
'FontSize',15,...
'ListboxTop',0,...
'Position',[(center_right-140) (top_of_plot-217) 300 60],...
'String','READ MUSIC',...
'Enable','off',...
'UserData',[] );

% down - transpose
h_dkey = uicontrol(...
'Parent',h_fig,...
'Units','pixels',...
'Callback',@downKey,...
'FontSize',12,...
'Position',[(center_right-140) top_of_plot-310 30 30],...
'String','-');

% up - transpose
h_ukey = uicontrol(...
'Parent',h_fig,...
'Units','pixels',...
'Callback',@upKey,...
'FontSize',12,...
'Position',[(center_right+30) top_of_plot-310 30 30],...
'String','+');

% transpose text
h_keytext = uicontrol(...
    'Parent',h_fig,...
    'FontSize',10,...
    'String','Transpose (+0)',...
    'Style','text',...
    'Position',[(center_right-110) top_of_plot-310 140 25],...
    'BackgroundColor',figure_color);

% Key text
h_keytext2 = uicontrol(...
'Parent',h_fig,...
'FontSize',10,...
'Position',[(center_right+60) top_of_plot-310 100 20],...
'String','Key = ?',...
'Style','text',...
'BackgroundColor',figure_color);

% BPM text
h_textbpm = uicontrol(...
'Parent',h_fig,...
'Units','pixels',...
'FontSize',10,...
'Position',[(center_right+60) top_of_plot-335 100 20],...
'String','BPM = 125',...
'Style','text',...
'BackgroundColor',figure_color);

% BPM slider
h_bpm = uicontrol(...
    'Parent',h_fig,...
    'Units','pixels',...
    'Callback',@sliderCallback,...
    'Style','slider',...
    'Position',[(center_right-140) top_of_plot-335 200 20],...
    'String','BPM',...
    'Max',200,'Min',50,'Value',125);
    

% play song button
h_song = uicontrol(...
'Parent',h_fig,...
'Units','pixels',...
'Callback',@playSongCallback,...
'Enable','off',...
'FontSize',15,...
'Position',[(center_right-140) top_of_plot-400 300 60],...
'String','PLAY SONG');





% figure create function, delete menubar
function figureCreateFcn(src,eventdata)
    set(src,'MenuBar','none');
end
    

% image selection menu callback
function imageMenuCallback(hObject,eventdata)
    complete = 0; 
    set(h_text2,'Visible','off');
    set(h_plotmenu,'Enable','off');
    set(h_keytext2,'String', 'Key = ?');
    
    image_names = get(hObject, 'String');
    sel_option = get(hObject,'Value');
    image_name = image_names(sel_option);
    image_name = image_name{1};
    % load image
    if (strcmp(image_name,'[From Camera]') || strcmp(image_name,''))
        img = [];
        plot_img = ones(1,1,3);
        set(h_run,'Enable','off');
    else
        image_file = strcat('samples/', image_name);
        image_file = strcat(image_file, '.jpg');
        img = imread(image_file);
        img_h = size(img,1);
        rel_h = 1.5 * size(img,2);
        missing_h = round(rel_h-img_h);
        add_on = zeros(missing_h,size(img,2),size(img,3));
        plot_img = [img; add_on];
        set(h_run,'Enable','on');
    end
    imagesc(plot_img,'Parent',h_axes); axis(h_axes,'off');
    set(h_plotmenu,'Value',1);
    try
        close(legendfig);
        legendfig = [];
    end
        
end

% popupmenu - plots, choose what to plot
function plotMenuCallback(hObject,eventdata)
    if complete
        sel_option = get(hObject,'Value');
        % pp_img bin_img staff_imgs num_st
        % 1-init,2-nolines,3-stemsdetect,4-nonotes(symboldetect?)
        switch sel_option
            case 1, %original
                imagesc(plot_img,'Parent',h_axes); axis(h_axes,'off');
            case 2, %binary
                imagesc(1-bin_img,'Parent',h_axes); colormap(gray); axis(h_axes,'off');
            case 3, %straightened
                imagesc(1-pp_img,'Parent',h_axes); colormap(gray); axis(h_axes,'off');
            case 4, %initial staffs
                imagesc(staffplots{1},'Parent',h_axes); axis(h_axes,'off');
            case 5, %lines removed
                imagesc(staffplots{2},'Parent',h_axes); axis(h_axes,'off');
            case 6, %stem detection
                imagesc(staffplots{3},'Parent',h_axes); axis(h_axes,'off');
            case 7 %no notes
                imagesc(staffplots{4},'Parent',h_axes); axis(h_axes,'off');
                legendfig = legend;
        end
        if (sel_option ~= 7)
            try
                close(legendfig);
                legendfig = [];
            end
        end
    end
    
end



% run button callback - INITIATE THE DISCOTECTIVE!!
function runButtonCallback(hObject,eventdata)
    fprintf(['Running ' image_name '...\n']);
    
    set(h_text2,'Visible','off');
    [notes pp_img bin_img staff_imgs num_st keySig] = run_discotective(img);
    complete = 1; 
    set(h_plotmenu,'Enable','on');
    set(h_song,'Enable','on');
    key = 0;
    set(h_keytext,'String','Transpose (+0)');

    
    %modify key sig
    keyS = keySig*7;
    setKeyText;
    
    % pad bin_img,pp_img below
    img_h = size(bin_img,1);
    rel_h = 1.5 * size(bin_img,2);
    missing_h = round(rel_h-img_h);
    
    add_on = ones(missing_h,size(pp_img,2),size(pp_img,3));
    pp_img = [pp_img; add_on];
    
    add_on = ones(missing_h,size(bin_img,2),size(bin_img,3));
    bin_img = [bin_img; add_on];    
    
    
    % put together staff images
    for imagecnt = 1:4
        staffs3 = cell(1,num_st);
        widths = [];
        for i = 1:num_st % grab each staff
            staffs3{i} =  staff_imgs{(i-1)*4+imagecnt};
            widths = [widths size(staff_imgs{(i-1)*4+imagecnt},2)];
        end
        maxw = max(widths);
        
        for i = 1:num_st % pad staffs
            cur_img = staffs3{i}; height = size(cur_img,1);
            if size(cur_img,2) < maxw
                dif = maxw - size(cur_img,2);
                cur_img = [cur_img cat(3,ones(height,dif),ones(height,dif),ones(height,dif))]; % pad on right  
            end
            cur_img = [cur_img; zeros(20,size(cur_img,2),size(cur_img,3))]; % pad between staffs-black
            staffs3{i} = cur_img;
        end
        
        %make one image
        bigimage = [];
        for i=1:num_st
            bigimage = [bigimage; staffs3{i}]; %cat vertically
        end
        % pad below to prevent warping
        img_h = size(bigimage,1);
        rel_h = 1.5 * size(bigimage,2);
        missing_h = round(rel_h-img_h);
        add_on = zeros(missing_h,size(bigimage,2),size(bigimage,3));
        bigimage = [bigimage; add_on];
        
        
        staffplots{imagecnt} = bigimage;
        
        
    end
    
    
    soundsc(ding,ding_fs);
    set(h_text2,'Visible','on');
end

% play song callback
function playSongCallback(hObject,eventdata)
    [song fs] = output_gui(notes,BPM,key);
    soundsc(song,fs);
end

% update BPM
function sliderCallback(hObject,eventdata)
    
    BPM = round(get(hObject,'Value'));
    cur_str = ['BPM = ' num2str(BPM)];
    set(h_textbpm,'String',cur_str);
end

% key transpose UP
function upKey(hObject,eventdata)
    key = key + 1;
    if key < 0
        cur_str = 'Transpose (-';
    else
        cur_str = 'Transpose (+';
    end
    set(h_keytext,'String',[cur_str num2str(abs(key)) ')']);
    
    setKeyText  
end

% key transpose DOWN
function downKey(hObject,eventdata)
    key = key - 1;
    if key < 0
        cur_str = 'Transpose (-';
    else
        cur_str = 'Transpose (+';
    end
    set(h_keytext,'String',[cur_str num2str(abs(key)) ')']);
    
    setKeyText
end

function setKeyText
    if complete
        key_str = key_lookup{mod(key+keyS,12)+1};
        set(h_keytext2,'String', ['Key = ' key_str]);
    end
end



end